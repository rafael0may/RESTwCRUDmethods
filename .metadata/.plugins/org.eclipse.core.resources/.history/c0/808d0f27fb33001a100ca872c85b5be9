package com.softtek.academia.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;


import com.softtek.academia.entity.Movie;
import com.softtek.academia.service.MovieServiceImpl;


@RestController
@RequestMapping("/movies")
public class MovieController {
	
	@Autowired
	MovieServiceImpl movieServiceImpl;
	
	@GetMapping(value = "", produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseStatus(HttpStatus.OK)
	public List<Movie> getMovieList(){
		return movieServiceImpl.getAllMovies();
	}
	
	@GetMapping(value = "/{id}/", produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseStatus(HttpStatus.OK)
	public Movie getMovieById(@PathVariable("id") Long id){
		return movieServiceImpl.getMovieById(id);	
	}
	
	
	@PostMapping (value = "" , consumes = MediaType.APPLICATION_JSON_VALUE, produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseStatus(HttpStatus.CREATED)
	public Movie addMovie(@RequestBody Movie requestBody){
		
		return movieServiceImpl.saveMovie(requestBody);
	}
	
	@PutMapping (value="/{id}/", consumes = MediaType.APPLICATION_JSON_VALUE, produces = MediaType.APPLICATION_JSON_VALUE )
	@ResponseStatus(HttpStatus.OK)
	public Movie updateMovie(@RequestBody Movie requestBody) {
		return movieServiceImpl.updateMovie(requestBody);
	}
	
	@DeleteMapping(value="/{id}/", consumes = MediaType.APPLICATION_JSON_VALUE, produces = MediaType.APPLICATION_JSON_VALUE )
	@ResponseStatus(HttpStatus.NO_CONTENT)
	public void deleteMovie(@PathVariable("id") Long id) {
		movieServiceImpl.deleteMovieById(id);
	}
	
		
}
